[{"D:\\ReactProjects\\calculatorhooks\\src\\index.js":"1","D:\\ReactProjects\\calculatorhooks\\src\\App.js":"2","D:\\ReactProjects\\calculatorhooks\\src\\reportWebVitals.js":"3","D:\\ReactProjects\\calculatorhooks\\src\\calc.js":"4","D:\\ReactProjects\\calculatorhooks\\src\\Calc.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":163,"mtime":1609676572724,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":2566,"mtime":1609686518244,"results":"10","hashOfConfig":"11"},{"size":2567,"mtime":1609692881878,"results":"12","hashOfConfig":"7"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"xd6gh9",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"11dhjyy",{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"D:\\ReactProjects\\calculatorhooks\\src\\index.js",[],["25","26"],"D:\\ReactProjects\\calculatorhooks\\src\\App.js",[],"D:\\ReactProjects\\calculatorhooks\\src\\reportWebVitals.js",[],"D:\\ReactProjects\\calculatorhooks\\src\\calc.js",["27","28"],"D:\\ReactProjects\\calculatorhooks\\src\\Calc.js",["29"],"import React,{useState,useEffect,useRef} from 'react'\r\n\r\nfunction Calc() {\r\n\r\nconst [calci, setCalci] = useState('');  \r\nconst inputRef = useRef(null)  \r\nuseEffect(() => {\r\n    inputRef.current.selettionStart = inputRef.current.value.length;\r\n   inputRef.current.selettionEnd = inputRef.current.value.length; \r\n})\r\nconst textNumber = (e) => {\r\n    e.preventDefault();\r\n   setCalci(e.target.value)\r\n}\r\nconst setNumber = (e) =>{\r\n    e.preventDefault();\r\n    if (calci!=='Error' ) {\r\n    try{\r\n    setCalci(calci.concat(e.target.name))\r\n    } catch(error){\r\n        setCalci('Error')\r\n    }\r\n}\r\ninputRef.current.focus();\r\n}\r\nconst clearNumber = (e)=>{\r\n    e.preventDefault();\r\n    setCalci(\" \")\r\n}\r\nconst delNumber = (e)=>{\r\n    setCalci(calci.slice(0,-1))\r\n    e.preventDefault();\r\n}\r\nconst giveNumber = (e)=>{\r\n    e.preventDefault();\r\n    try{\r\n    setCalci(eval(calci))\r\n}catch(error){\r\n    setCalci('Error')\r\n   }\r\n}\r\n\r\nreturn (\r\n    <div className='gridcont'>\r\n        <input className='inp' value={calci} type='text' onChange={(e)=>textNumber(e)} ref={inputRef} />    \r\n             <div className='items'>\r\n                 <button name='c' onClick={(e)=>clearNumber(e)} >C</button>\r\n                 <button name='d' onClick={(e)=>delNumber(e)} >D</button>\r\n                 <button id='c' name='+' onClick={(e)=>setNumber(e)} >+</button>\r\n                 <button name='1' onClick={(e)=>setNumber(e)} >1</button>\r\n                 <button name='2' onClick={(e)=>setNumber(e)} >2</button>\r\n                <button name='3' onClick={(e)=>setNumber(e)} >3</button>\r\n                 <button id='c' name='-' onClick={(e)=>setNumber(e)} >-</button>\r\n                 <button name='4' onClick={(e)=>setNumber(e)} >4</button>\r\n                 <button name='5' onClick={(e)=>setNumber(e)} >5</button>\r\n                 <button name='6' onClick={(e)=>setNumber(e)} >6</button>\r\n                 <button id='c' name='*' onClick={(e)=>setNumber(e)} >*</button>\r\n                 <button name='7' onClick={(e)=>setNumber(e)} >7</button>\r\n                 <button name='8' onClick={(e)=>setNumber(e)} >8</button>\r\n                 <button name='9' onClick={(e)=>setNumber(e)} >9</button>\r\n                 <button id='c' name='/' onClick={(e)=>setNumber(e)} >/</button>\r\n                 <button name='.' onClick={(e)=>setNumber(e)} >.</button>\r\n                 <button name='0' onClick={(e)=>setNumber(e)} >0</button>\r\n                 <button name='=' onClick={(e)=>giveNumber(e)} >=</button>\r\n             </div>       \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Calc\r\n",{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":1,"column":15,"nodeType":"36","messageId":"37","endLine":1,"endColumn":24},{"ruleId":"34","severity":1,"message":"38","line":1,"column":27,"nodeType":"36","messageId":"37","endLine":1,"endColumn":33},{"ruleId":"39","severity":1,"message":"40","line":37,"column":14,"nodeType":"41","messageId":"42","endLine":37,"endColumn":18},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","no-eval","eval can be harmful.","CallExpression","unexpected","no-global-assign","no-unsafe-negation"]